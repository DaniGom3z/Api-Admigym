// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
} 

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  email       String       @unique
  name        String?
  password    String
}

model Membership {
  id              Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  type             String    // "mensual" o "diaria"
  startDate        DateTime
  endDate          DateTime
  price            Float
  user             Member      @relation(fields: [memberId], references: [id])
  memberId         Int 
}

model Equipment {
  id              Int        @id @default(autoincrement())
  name            String     @db.VarChar(255) // Nombre del equipo
  maintenanceDate DateTime   // Próxima fecha de mantenimiento
  lastMaintained  DateTime   // Fecha del último mantenimiento
  quantity        Int        // Cantidad de unidades
}

model Supplement {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(255) // Nombre del suplemento
  price         Float    // Precio de venta
  stock         Int      // Inventario disponible
  sales         Sale[]   // Relación con las ventas
}

model Sale {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  user          Member       @relation(fields: [userId], references: [id])
  userId        Int
  supplement    Supplement @relation(fields: [supplementId], references: [id])
  supplementId  Int
  quantity      Int        // Cantidad de suplementos comprados
  totalPrice    Float      // Precio total de la venta
}

model Member {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  number      String         @unique
  name        String
  membership  Membership[] // Relación con las membresías
  sales       Sale[]       // Relación con ventas de suplementos
}